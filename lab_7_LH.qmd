---
title: "Week 7 Lab- Binary Logistic Regression and Tidymodels"
author: "Lily Heidger"
format: 
  html:
    embed-resources: true
    code-fold: true
    toc: true
execute:
  warning: false
  message: false
---
```{r setup}
library(tidyverse)
library(here)
library(tidymodels)
```

# Tidymodels with a classifier task

```{r}
t_df <- read_csv(here('data', 'titanic', 'titanic_survival.csv'))

surv_df <- t_df |>
  mutate(survived = factor(survived), 
         pclass = factor(pclass)) |>
  select(-cabin, -ticket, -parch, -sib_sp)

ggplot(surv_df, aes(x = pclass, fill = survived))+
  geom_bar()

ggplot(surv_df, aes(x = age, fill = survived))+
  geom_histogram()

ggplot(surv_df, aes(x = survived, y = fare))+
  geom_boxplot()
```

#Basic BLR in R

```{r}
f1 <- survived ~ sex + pclass + fare
f2 <- survived ~ passenger_id + embarked

blr1 <- glm(formula = f1, data = surv_df, family = binomial)
summary(blr1)

blr2 <- glm(formula = f2, data= surv_df, family = binomial)
summary(blr2)

table(t_df |> select(embarked, pclass))
```


### pseudocode 

* k-fold cross validation
* purr function to test all the models at once
* AIC or BIC to compare models 
* decide some arbitrary k-fold cross validation
* making a function and using map
* separating out training data and testing data and comparing accuracy

# Using tidymodels

## Split the data

```{r split the data}
## check the balance of the survived column

surv_df |>
  group_by(survived) |>
  summarize(n = n()) |>
  ungroup() |>
  mutate(prop = n/sum(n))

set.seed(123)
surv_split <- initial_split(surv_df, prop = 0.8, strata = survived)

surv_train_df <- training(surv_split)
surv_test_df <- testing(surv_split)

```

## Basic models with parsnip (in Tidymodels)

```{r set up a blr model with our data}

blr_mdl <- logistic_reg() %>% 
  set_engine('glm') 

blr1_fit <- blr_mdl %>% 
  fit(formula = f1, data = surv_train_df)

garbage_fit <- blr_mdl %>% fit(formula = f2, data = surv_train_df)

```


## Predict our testing data

```{r}
surv_test_predict <- surv_test_df %>% 
  mutate(predict(blr1_fit, new_data = surv_test_df)) %>% 
  mutate(predict(blr1_fit, new_data = ., type = 'prob'))


table(surv_test_predict %>% 
        select(survived, .pred_class))
### confusion matrix
```


```{r}
accuracy(surv_test_predict, truth = survived, estimate= .pred_class) 
roc_df <- roc_curve(surv_test_predict, truth = survived, .pred_0)
autoplot(roc_df)

```

```{r}
garbage_test_df <- surv_test_df %>% 
  mutate(predict(garbage_fit, new_data = surv_test_df)) %>% 
  mutate(predict(garbage_fit, new_data = ., type = 'prob'))


table(surv_test_predict %>% 
        select(survived, .pred_class))


accuracy(garbage_test_df, truth = survived, estimate= .pred_class) 

garbage_roc_df <- garbage_test_df %>% roc_curve(truth = survived, .pred_0)
autoplot(garbage_roc_df)

yardstick::roc_auc(surv_test_predict, truth = survived, .pred_0)
yardstick::roc_auc(garbage_test_df, truth = survived, .pred_0)
```


## Tidymodels

```{r}
set.seed(10101)
surv_train_fold <- vfold_cv(surv_train_df, v = 10) #break into 10 folds
```

```{r}
blr_mdl <- logistic_reg() %>% 
  set_engine('glm')

blr_wf <- workflow() %>% 
  add_model(blr_mdl) %>% 
  add_formula(survived~ pclass + sex)

blr_fit_folds <- blr_wf %>% 
  fit_resamples(surv_train_fold)

blr_fit_folds
collect_metrics(blr_fit_folds)


```

